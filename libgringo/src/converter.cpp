/* Generated by re2c 0.13.5 on Thu Jan 26 12:49:49 2012 */
#line 1 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
// Copyright (c) 2009, Roland Kaminski <kaminski@cs.uni-potsdam.de>
//
// This file is part of gringo.
//
// gringo is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// gringo is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with gringo.  If not, see <http://www.gnu.org/licenses/>.

#include <gringo/converter.h>
#include <gringo/storage.h>
#include <gringo/exceptions.h>
#include <gringo/streams.h>
#include "converter_impl.h"

void *converterAlloc(void *(*mallocProc)(size_t));
void converterFree(void *p, void (*freeProc)(void*));
void converter(void *yyp, int yymajor, Converter::Token yyminor, Converter *pParser);

Converter::Converter(Output *output, Streams &streams)
	: GroundProgramBuilder(output)
	, streams_(streams)
	, parser_(converterAlloc(malloc))
	, error_(false)
{
}

#line 43 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"


int Converter::lex()
{
start:
	int bc = 0;
	start();
	token_.line   = line();
	token_.column = column();
	
#line 50 "src/converter.cpp"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;

	if ((YYLIMIT - YYCURSOR) < 9) YYFILL(9);
	yych = *YYCURSOR;
	switch (yych) {
	case '\t':
	case '\r':
	case ' ':	goto yy3;
	case '\n':	goto yy4;
	case '"':	goto yy15;
	case '#':	goto yy8;
	case '%':	goto yy43;
	case '(':	goto yy29;
	case ')':	goto yy31;
	case ',':	goto yy19;
	case '-':	goto yy21;
	case '.':	goto yy16;
	case '/':	goto yy39;
	case '0':	goto yy12;
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy14;
	case ':':	goto yy18;
	case '=':	goto yy37;
	case '@':	goto yy41;
	case '[':	goto yy25;
	case ']':	goto yy27;
	case '_':	goto yy10;
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy11;
	case 'n':	goto yy6;
	case '{':	goto yy33;
	case '|':	goto yy23;
	case '}':	goto yy35;
	default:	goto yy45;
	}
yy2:
#line 53 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ goto start; }
#line 121 "src/converter.cpp"
yy3:
	yych = *++YYCURSOR;
	goto yy148;
yy4:
	++YYCURSOR;
#line 54 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ if(eof()) return 0; step(); goto start; }
#line 129 "src/converter.cpp"
yy6:
	++YYCURSOR;
	switch ((yych = *YYCURSOR)) {
	case 'o':	goto yy144;
	default:	goto yy61;
	}
yy7:
#line 64 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ token_.index  = storage()->index(string()); return CONVERTER_IDENTIFIER; }
#line 139 "src/converter.cpp"
yy8:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'a':	goto yy67;
	case 'c':	goto yy68;
	case 'e':	goto yy65;
	case 'h':	goto yy71;
	case 'i':	goto yy70;
	case 'm':	goto yy66;
	case 'o':	goto yy64;
	case 's':	goto yy69;
	default:	goto yy9;
	}
yy9:
#line 90 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ syntaxError(); goto start; }
#line 157 "src/converter.cpp"
yy10:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case '_':	goto yy62;
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy60;
	default:	goto yy9;
	}
yy11:
	yych = *++YYCURSOR;
	goto yy61;
yy12:
	++YYCURSOR;
yy13:
#line 65 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ token_.number = integer(); return CONVERTER_NUMBER; }
#line 199 "src/converter.cpp"
yy14:
	yych = *++YYCURSOR;
	goto yy59;
yy15:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case '\n':	goto yy9;
	default:	goto yy51;
	}
yy16:
	++YYCURSOR;
#line 74 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_DOT; }
#line 214 "src/converter.cpp"
yy18:
	yych = *++YYCURSOR;
	switch (yych) {
	case '-':	goto yy48;
	default:	goto yy9;
	}
yy19:
	++YYCURSOR;
#line 76 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_COMMA; }
#line 225 "src/converter.cpp"
yy21:
	++YYCURSOR;
#line 77 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_MINUS; }
#line 230 "src/converter.cpp"
yy23:
	++YYCURSOR;
#line 78 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_VBAR; }
#line 235 "src/converter.cpp"
yy25:
	++YYCURSOR;
#line 79 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_LSBRAC; }
#line 240 "src/converter.cpp"
yy27:
	++YYCURSOR;
#line 80 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_RSBRAC; }
#line 245 "src/converter.cpp"
yy29:
	++YYCURSOR;
#line 81 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_LBRAC; }
#line 250 "src/converter.cpp"
yy31:
	++YYCURSOR;
#line 82 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_RBRAC; }
#line 255 "src/converter.cpp"
yy33:
	++YYCURSOR;
#line 83 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_LCBRAC; }
#line 260 "src/converter.cpp"
yy35:
	++YYCURSOR;
#line 84 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_RCBRAC; }
#line 265 "src/converter.cpp"
yy37:
	++YYCURSOR;
#line 85 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_ASSIGN; }
#line 270 "src/converter.cpp"
yy39:
	++YYCURSOR;
#line 86 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_SLASH; }
#line 275 "src/converter.cpp"
yy41:
	++YYCURSOR;
#line 87 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_AT; }
#line 280 "src/converter.cpp"
yy43:
	++YYCURSOR;
	switch ((yych = *YYCURSOR)) {
	case '*':	goto yy46;
	default:	goto yy44;
	}
yy44:
#line 89 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ goto comment; }
#line 290 "src/converter.cpp"
yy45:
	yych = *++YYCURSOR;
	goto yy9;
yy46:
	++YYCURSOR;
#line 88 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ bc++; goto blockcomment; }
#line 298 "src/converter.cpp"
yy48:
	++YYCURSOR;
#line 75 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_IF; }
#line 303 "src/converter.cpp"
yy50:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
yy51:
	switch (yych) {
	case '\n':	goto yy52;
	case '"':	goto yy55;
	case '\\':	goto yy53;
	default:	goto yy50;
	}
yy52:
	YYCURSOR = YYMARKER;
	switch (yyaccept) {
	case 0: 	goto yy9;
	case 1: 	goto yy56;
	case 2: 	goto yy114;
	case 3: 	goto yy122;
	}
yy53:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	switch (yych) {
	case '\n':	goto yy52;
	case '"':	goto yy57;
	case '\\':	goto yy53;
	default:	goto yy50;
	}
yy55:
	++YYCURSOR;
yy56:
#line 66 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ token_.index = storage()->index(string()); return CONVERTER_STRING; }
#line 338 "src/converter.cpp"
yy57:
	yyaccept = 1;
	YYMARKER = ++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	switch (yych) {
	case '\n':	goto yy56;
	case '"':	goto yy55;
	case '\\':	goto yy53;
	default:	goto yy50;
	}
yy58:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
yy59:
	switch (yych) {
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy58;
	default:	goto yy13;
	}
yy60:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
yy61:
	switch (yych) {
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy60;
	default:	goto yy7;
	}
yy62:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	switch (yych) {
	case '_':	goto yy62;
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy60;
	default:	goto yy52;
	}
yy64:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'd':	goto yy141;
	default:	goto yy52;
	}
yy65:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'v':	goto yy130;
	case 'x':	goto yy129;
	default:	goto yy52;
	}
yy66:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy112;
	case 'i':	goto yy111;
	default:	goto yy52;
	}
yy67:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'v':	goto yy108;
	default:	goto yy52;
	}
yy68:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'o':	goto yy97;
	default:	goto yy52;
	}
yy69:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'h':	goto yy83;
	case 'u':	goto yy84;
	default:	goto yy52;
	}
yy70:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy76;
	default:	goto yy52;
	}
yy71:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy72;
	default:	goto yy52;
	}
yy72:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'd':	goto yy73;
	default:	goto yy52;
	}
yy73:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy74;
	default:	goto yy52;
	}
yy74:
	++YYCURSOR;
#line 57 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_HIDE; }
#line 540 "src/converter.cpp"
yy76:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'f':	goto yy77;
	default:	goto yy52;
	}
yy77:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy78;
	default:	goto yy52;
	}
yy78:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy79;
	default:	goto yy52;
	}
yy79:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'u':	goto yy80;
	default:	goto yy52;
	}
yy80:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy81;
	default:	goto yy52;
	}
yy81:
	++YYCURSOR;
#line 63 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_INF; }
#line 575 "src/converter.cpp"
yy83:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'o':	goto yy94;
	default:	goto yy52;
	}
yy84:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy85;
	case 'p':	goto yy87;
	default:	goto yy52;
	}
yy85:
	++YYCURSOR;
#line 67 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_SUM; }
#line 593 "src/converter.cpp"
yy87:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy88;
	default:	goto yy52;
	}
yy88:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy89;
	default:	goto yy52;
	}
yy89:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy90;
	default:	goto yy52;
	}
yy90:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'u':	goto yy91;
	default:	goto yy52;
	}
yy91:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy92;
	default:	goto yy52;
	}
yy92:
	++YYCURSOR;
#line 62 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_SUP; }
#line 628 "src/converter.cpp"
yy94:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'w':	goto yy95;
	default:	goto yy52;
	}
yy95:
	++YYCURSOR;
#line 56 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_SHOW; }
#line 639 "src/converter.cpp"
yy97:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy99;
	case 'u':	goto yy98;
	default:	goto yy52;
	}
yy98:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy105;
	default:	goto yy52;
	}
yy99:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'p':	goto yy100;
	default:	goto yy52;
	}
yy100:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'u':	goto yy101;
	default:	goto yy52;
	}
yy101:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy102;
	default:	goto yy52;
	}
yy102:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy103;
	default:	goto yy52;
	}
yy103:
	++YYCURSOR;
#line 60 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_COMPUTE; }
#line 681 "src/converter.cpp"
yy105:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy106;
	default:	goto yy52;
	}
yy106:
	++YYCURSOR;
#line 68 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_COUNT; }
#line 692 "src/converter.cpp"
yy108:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'g':	goto yy109;
	default:	goto yy52;
	}
yy109:
	++YYCURSOR;
#line 69 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_AVG; }
#line 703 "src/converter.cpp"
yy111:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy121;
	default:	goto yy52;
	}
yy112:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'x':	goto yy113;
	default:	goto yy52;
	}
yy113:
	yyaccept = 2;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'i':	goto yy115;
	default:	goto yy114;
	}
yy114:
#line 71 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_MAX; }
#line 726 "src/converter.cpp"
yy115:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy116;
	default:	goto yy52;
	}
yy116:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy117;
	default:	goto yy52;
	}
yy117:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'z':	goto yy118;
	default:	goto yy52;
	}
yy118:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy119;
	default:	goto yy52;
	}
yy119:
	++YYCURSOR;
#line 59 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_MAXIMIZE; }
#line 755 "src/converter.cpp"
yy121:
	yyaccept = 3;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'i':	goto yy123;
	default:	goto yy122;
	}
yy122:
#line 70 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_MIN; }
#line 766 "src/converter.cpp"
yy123:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy124;
	default:	goto yy52;
	}
yy124:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy125;
	default:	goto yy52;
	}
yy125:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'z':	goto yy126;
	default:	goto yy52;
	}
yy126:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy127;
	default:	goto yy52;
	}
yy127:
	++YYCURSOR;
#line 58 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_MINIMIZE; }
#line 795 "src/converter.cpp"
yy129:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy134;
	default:	goto yy52;
	}
yy130:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy131;
	default:	goto yy52;
	}
yy131:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy132;
	default:	goto yy52;
	}
yy132:
	++YYCURSOR;
#line 72 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_EVEN; }
#line 818 "src/converter.cpp"
yy134:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy135;
	default:	goto yy52;
	}
yy135:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy136;
	default:	goto yy52;
	}
yy136:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy137;
	default:	goto yy52;
	}
yy137:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy138;
	default:	goto yy52;
	}
yy138:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy139;
	default:	goto yy52;
	}
yy139:
	++YYCURSOR;
#line 61 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_EXTERNAL; }
#line 853 "src/converter.cpp"
yy141:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'd':	goto yy142;
	default:	goto yy52;
	}
yy142:
	++YYCURSOR;
#line 73 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_ODD; }
#line 864 "src/converter.cpp"
yy144:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy145;
	default:	goto yy61;
	}
yy145:
	++YYCURSOR;
	switch ((yych = *YYCURSOR)) {
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy60;
	default:	goto yy146;
	}
yy146:
#line 55 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ return CONVERTER_NOT; }
#line 942 "src/converter.cpp"
yy147:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
yy148:
	switch (yych) {
	case '\t':
	case '\r':
	case ' ':	goto yy147;
	default:	goto yy2;
	}
}
#line 91 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"

blockcomment:
	
#line 959 "src/converter.cpp"
{
	YYCTYPE yych;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = *YYCURSOR;
	switch (yych) {
	case '\n':	goto yy155;
	case '%':	goto yy153;
	case '*':	goto yy151;
	default:	goto yy157;
	}
yy151:
	++YYCURSOR;
	switch ((yych = *YYCURSOR)) {
	case '%':	goto yy160;
	default:	goto yy152;
	}
yy152:
#line 98 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ goto blockcomment; }
#line 979 "src/converter.cpp"
yy153:
	++YYCURSOR;
	switch ((yych = *YYCURSOR)) {
	case '*':	goto yy158;
	default:	goto yy154;
	}
yy154:
#line 96 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ goto comment; }
#line 989 "src/converter.cpp"
yy155:
	++YYCURSOR;
#line 97 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ if(eof()) { syntaxError(); return 0; } step(); goto blockcomment; }
#line 994 "src/converter.cpp"
yy157:
	yych = *++YYCURSOR;
	goto yy152;
yy158:
	++YYCURSOR;
#line 95 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ bc++; goto blockcomment; }
#line 1002 "src/converter.cpp"
yy160:
	++YYCURSOR;
#line 94 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ if(--bc == 0) goto start; goto blockcomment; }
#line 1007 "src/converter.cpp"
}
#line 99 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"

comment: { }
	
#line 1013 "src/converter.cpp"
{
	YYCTYPE yych;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	switch (yych) {
	case '\n':	goto yy164;
	default:	goto yy166;
	}
yy164:
	++YYCURSOR;
#line 102 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ if(eof()) { if(bc > 0) syntaxError(); return 0; } step(); if(bc > 0) goto blockcomment; goto start; }
#line 1026 "src/converter.cpp"
yy166:
	++YYCURSOR;
#line 103 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"
	{ goto comment; }
#line 1031 "src/converter.cpp"
}
#line 104 "/home/kaminski/svn/potassco/tags/gringo-3.0.4/libgringo/src/converter.r2c"

}

void Converter::parseError()
{
	error_ = true;
}

std::string Converter::errorToken()
{
	if(eof()) return "<EOF>";
	else return string();
}

void Converter::syntaxError()
{
	errors_.push_back(ErrorTok(token_.loc(), errorToken()));
	error_ = true;
}

void Converter::parse(std::istream &in)
{
	token_.file = storage()->index(streams_.currentFilename());
	reset(&in);
	int token;
	do
	{
		token = lex();
		converter(parser_, token, token_, this);
	}
	while(token != 0);
}

void Converter::parse()
{
	level_ = 1;
	do
	{
		parse(streams_.currentStream());
		if(error_)
		{
			ParseException ex;
			foreach(ErrorTok &tok, errors_)
				ex.add(StrLoc(storage(), tok.first), tok.second);
			throw ex;
		}
	}
	while(streams_.next());
}

void Converter::addSigned(uint32_t index, bool sign)
{
	if(sign) { index = storage()->index(std::string("-") + storage()->string(index)); }
	return addVal(Val::create(Val::ID, index));
}


Converter::~Converter()
{
	converterFree(parser_, free);
}
