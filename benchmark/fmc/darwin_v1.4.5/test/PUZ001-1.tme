%--------------------------------------------------------------------------
% File     : PUZ001-1 : TPTP v2.5.0. Released v1.0.0.
% Domain   : Puzzles
% Problem  : Dreadbury Mansion
% Version  : Especial.
%            Theorem formulation : Made unsatisfiable.
% English  : Someone who lives in Dreadbury Mansion killed Aunt Agatha. 
%            Agatha, the butler, and Charles live in Dreadbury Mansion, 
%            and are the only people who live therein. A killer always 
%            hates his victim, and is never richer than his victim. 
%            Charles hates no one that Aunt Agatha hates. Agatha hates 
%            everyone except the butler. The butler hates everyone not 
%            richer than Aunt Agatha. The butler hates everyone Aunt 
%            Agatha hates. No one hates everyone. Agatha is not the 
%            butler. Therefore : Agatha killed herself.

% Refs     : [Pel86] Pelletier (1986), Seventy-five Problems for Testing Au
%          : [MB88]  Manthey & Bry (1988), SATCHMO: A Theorem Prover Implem
% Source   : [TPTP]
% Names    : 

% Status   : unsatisfiable
% Rating   : 0.00 v2.0.0
% Syntax   : Number of clauses    :   12 (   2 non-Horn;   5 unit;  12 RR)
%            Number of literals   :   21 (   0 equality)
%            Maximal clause size  :    3 (   1 average)
%            Number of predicates :    4 (   0 propositional; 1-2 arity)
%            Number of functors   :    3 (   3 constant; 0-0 arity)
%            Number of variables  :    8 (   0 singleton)
%            Maximal term depth   :    1 (   1 average)

% Comments : Modified from the [MB88] version to be unsatisfiable, by Geoff
%            Sutcliffe.
%          : Also known as "Who killed Aunt Agatha"
%          : tptp2X -f protein PUZ001-1.p 
%--------------------------------------------------------------------------

% agatha, hypothesis.
lives(agatha).

% butler, hypothesis.
lives(butler).

% charles, hypothesis.
lives(charles).

% poorer_killer, hypothesis.
false :- killed(X, Y), 
    richer(X, Y).

% different_hates, hypothesis.
false :- hates(agatha, X), 
    hates(charles, X).

% no_one_hates_everyone, hypothesis.
false :- hates(X, agatha), 
    hates(X, butler), 
    hates(X, charles).

% agatha_hates_agatha, hypothesis.
hates(agatha, agatha).

% agatha_hates_charles, hypothesis.
hates(agatha, charles).

% killer_hates_victim, hypothesis.
hates(X, Y) :- 
    killed(X, Y).

% same_hates, hypothesis.
hates(butler, X) :- 
    hates(agatha, X).

% butler_hates_poor, hypothesis.
richer(X, agatha); 
hates(butler, X) :- 
    lives(X).

% prove_neither_charles_nor_butler_did_it, conjecture.
killed(butler, agatha); 
killed(charles, agatha).

%--------------------------------------------------------------------------
